<% content_for(:sidebar) do %>
<div class="inner">
<div class="sign_in">
  <h1>Sign in</h1>
<%= form_for @user_session do |f| %>
   <div class="field">
      <%= f.label :email %>
    <%= f.text_field :email %>
  </div>
  <div class="field">
  <%= f.label :password %>
  <%= f.password_field :password %>
  </div>
  <%= f.submit "Sign in", :class=>"button black" %>

<% end %>
</div>
<div class="sign_up">
 <h1>Sign up</h1>
<%= form_for @user, :url => users_path do |f|%>
      <div class="field">
  <%=f.label :name%>
  <%=f.text_field :name%>
        </div>
      <div class="field">
  <%=f.label :email%>
  <%=f.text_field :email%>
        </div>
      <div class="field">
  <%=f.label :password %>
  <%=f.password_field :password %>
        </div>
      <div class="field">
  <%=f.label :password_confirmation %>
  <%=f.password_field :password_confirmation %>
        </div>
  <%=f.submit "Sign up", :class => "button black" %>
<%end%>
  </div>
</div>
<% end %>
<div class="home inner">
  <h1>Rethinking Requirements</h1>
  <p>REACT is an easy to use software documentation tool that keeps clients and developers on the same page.</p>
  <h3>Stop passing around Word documents</h3>
  <p>Passing around files is inefficient and lends itself to inconsistent formatting. REACT is a web application that's always available and distills the documentation process by focusing on Features, Actors and a Glossary of terms.</p>
  <h3>Sign on the dotted line</h3>
  <p>Adding or changing a feature is a big deal. Any miscommunication about requirements can result in a significant loss of time and money. By requiring a signature on every feature, REACT ensures that both client and developer agree on what will be built.</p>
  <h3>Documentation is a constant process</h3>
  <p>REACT connects your development process back to the documentation. We link test results directly to REACT features to show the client which features are passing or failing. The client can see progress in the context of the entire requirements specification.</p>
  <p>An effective requirements specification answers the question: “What does the software do?” REACT keeps the stakeholders engaged by requiring signatures on all requirements changes and revealing the development progress through test results.</p>
</div>
